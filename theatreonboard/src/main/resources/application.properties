server.port=8083
spring.application.name=theater-onboarding-service

logging.level.root=INFO
eureka.client.serviceurl.defaultzone=http://localhost:8761/eureka

eureka.client.register-with-eureka=true
eureka.client.fetch-registry=true

spring.datasource.url=jdbc:h2:mem:javatpoint
spring.datasource.driverClassName=org.h2.Driver
spring.datasource.username=sa
spring.datasource.password=
spring.jpa.database-platform=org.hibernate.dialect.H2Dialect
#enabling the H2 console
spring.h2.console.enabled=true

booking.pricingStrategy=thirdTicketDiscountStrategy


# RabbitMQ connection properties
spring.rabbitmq.host=your-rabbitmq-host
spring.rabbitmq.port=5672
spring.rabbitmq.username=your-username
spring.rabbitmq.password=your-password

# RabbitMQ exchange and routing key for payment messages
rabbitmq.exchange=payment-exchange
rabbitmq.routingKey=payment-routing-key

rabbitmq.notification.routingKey=notification-routing-key

spring.cloud.stream.bindings.notification-output.destination=notification-topic
spring.cloud.stream.bindings.notification-output.content-type=application/json
spring.cloud.stream.rabbit.bindings.notification-output.producer.routing-key-expression='notification-topic'

# Configure the queue for payment events
spring.cloud.stream.bindings.payment-events.destination=payment-events
spring.cloud.stream.bindings.payment-events.content-type=application/json
spring.cloud.stream.bindings.payment-events.group=booking-service # Consumer group for PaymentService

# Configure the queue for notification events
spring.cloud.stream.bindings.notification-events.destination=notification-events
spring.cloud.stream.bindings.notification-events.content-type=application/json
spring.cloud.stream.bindings.notification-events.group=booking-service # Consumer group for NotificationService
